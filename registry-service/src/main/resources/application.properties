spring.application.name=registry-service
server.port=8081

#spring.security.oauth2.client.registration.google.client-id=your-google-client-id
#spring.security.oauth2.client.registration.google.client-secret=your-google-client-secret

#spring.security.oauth2.client.registration.facebook.client-id=your-facebook-client-id
#spring.security.oauth2.client.registration.facebook.client-secret=your-facebook-client-secret



# Securtiy Config
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/SportingAuth
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

# JWT Config
jwt.auth.converter.resource-id=tarik-client
jwt.auth.converter.principal-attribute=preferred_username



#keycloak.realm=your-realm
#keycloak.auth-server-url=http://localhost:8080/auth
#keycloak.client-id=tarik-client
#keycloak.credentials.secret=password
#keycloak.security-constraints[0].authRoles[0]=USER
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=/user/*
#keycloak.security-constraints[1].authRoles[0]=ADMIN
#keycloak.security-constraints[1].securityCollections[0].patterns[0]=/admin/*



#spring.datasource.url=jdbc:postgresql://localhost:5432/userDB
#spring.datasource.username=postgres
#spring.datasource.password=tarik2000
## JPA and Hibernate configurations
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.show-sql=true
#spring.datasource.driver-class-name=org.postgresql.Driver